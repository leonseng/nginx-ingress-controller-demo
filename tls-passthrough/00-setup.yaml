apiVersion: v1
kind: Namespace
metadata:
  name: nic-demo-tls-passthrough
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: nic-demo-tls-passthrough
data:
  nginx.conf: |
    worker_processes auto;

    events {
      worker_connections 1024;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /dev/stdout  main;
      error_log /dev/stderr error;

      server {
        listen 443 ssl;
        server_name tls-passthrough.nic-demo.com;

        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_client_certificate /etc/nginx/ssl/rootCA.crt;

        ssl_verify_client optional;

        location / {
          return 200 "TLS passthrough\n";
        }

        location /mtls {
          if ($ssl_client_verify = SUCCESS) {
            return 200 "Hello, $ssl_client_s_dn!\n";
          }

          return 200 "No client cert\n";
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-tls
  namespace: nic-demo-tls-passthrough
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tls-secret
              mountPath: /etc/nginx/ssl
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-configmap
        - name: tls-secret
          secret:
            secretName: tls-passthrough.nic-demo.com-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-tls
  namespace: nic-demo-tls-passthrough
spec:
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 443
      targetPort: 443
  type: ClusterIP
